version: '3.8'

services:
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: php
    volumes:
      - .:/var/www/html:cached
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    working_dir: /var/www/html
    environment:
      APP_ENV: dev
    networks:
      - app-network
    depends_on:
      - mysql

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - .:/var/www/html:cached
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/fastcgi-php.conf:/etc/nginx/snippets/fastcgi-php.conf
    ports:
      - "80:80"
    depends_on:
      - php
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: symfony
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  mysql_data:

networks:
  app-network:
    driver: bridge
